// <auto-generated />
using System;
using AT_Csharp_2T_2S.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AT_Csharp_2T_2S.Migrations
{
    [DbContext(typeof(QueViagemDbContext))]
    [Migration("20250929015052_AtualizandoAsTabelasDeNovo")]
    partial class AtualizandoAsTabelasDeNovo
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.9");

            modelBuilder.Entity("AT_Csharp_2T_2S.Models.CidadeDestino", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("AtualizadoEm")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CriadoEm")
                        .HasColumnType("TEXT");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<long>("PaisDestinoId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("PaisDestinoId");

                    b.ToTable("CidadesDestino");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            AtualizadoEm = new DateTime(2025, 9, 28, 0, 0, 0, 0, DateTimeKind.Utc),
                            CriadoEm = new DateTime(2025, 9, 28, 0, 0, 0, 0, DateTimeKind.Utc),
                            Nome = "Rio de Janeiro",
                            PaisDestinoId = 1L
                        },
                        new
                        {
                            Id = 2L,
                            AtualizadoEm = new DateTime(2025, 9, 28, 0, 0, 0, 0, DateTimeKind.Utc),
                            CriadoEm = new DateTime(2025, 9, 28, 0, 0, 0, 0, DateTimeKind.Utc),
                            Nome = "Paris",
                            PaisDestinoId = 2L
                        },
                        new
                        {
                            Id = 3L,
                            AtualizadoEm = new DateTime(2025, 9, 28, 0, 0, 0, 0, DateTimeKind.Utc),
                            CriadoEm = new DateTime(2025, 9, 28, 0, 0, 0, 0, DateTimeKind.Utc),
                            Nome = "Tóquio",
                            PaisDestinoId = 3L
                        },
                        new
                        {
                            Id = 4L,
                            AtualizadoEm = new DateTime(2025, 9, 28, 0, 0, 0, 0, DateTimeKind.Utc),
                            CriadoEm = new DateTime(2025, 9, 28, 0, 0, 0, 0, DateTimeKind.Utc),
                            Nome = "Hong Kong",
                            PaisDestinoId = 4L
                        });
                });

            modelBuilder.Entity("AT_Csharp_2T_2S.Models.Cliente", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("AtualizadoEm")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CriadoEm")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Clientes");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            AtualizadoEm = new DateTime(2025, 9, 28, 0, 0, 0, 0, DateTimeKind.Utc),
                            CriadoEm = new DateTime(2025, 9, 28, 0, 0, 0, 0, DateTimeKind.Utc),
                            Email = "balalau@email.com",
                            Nome = "Balalau da Silva"
                        });
                });

            modelBuilder.Entity("AT_Csharp_2T_2S.Models.PacoteTuristico", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("AtualizadoEm")
                        .HasColumnType("TEXT");

                    b.Property<int>("CapacidadeMaxima")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CriadoEm")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DataInicio")
                        .HasColumnType("TEXT");

                    b.Property<int>("Dias")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("EstaDeletado")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Preco")
                        .HasColumnType("TEXT");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("PacotesTuristicos");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            AtualizadoEm = new DateTime(2025, 9, 28, 0, 0, 0, 0, DateTimeKind.Utc),
                            CapacidadeMaxima = 100,
                            CriadoEm = new DateTime(2025, 9, 28, 0, 0, 0, 0, DateTimeKind.Utc),
                            DataInicio = new DateTime(2026, 2, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Dias = 7,
                            EstaDeletado = false,
                            Preco = 550.00m,
                            Titulo = "Comer"
                        },
                        new
                        {
                            Id = 2L,
                            AtualizadoEm = new DateTime(2025, 9, 28, 0, 0, 0, 0, DateTimeKind.Utc),
                            CapacidadeMaxima = 150,
                            CriadoEm = new DateTime(2025, 9, 28, 0, 0, 0, 0, DateTimeKind.Utc),
                            DataInicio = new DateTime(2025, 12, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Dias = 5,
                            EstaDeletado = false,
                            Preco = 750.00m,
                            Titulo = "Beber"
                        },
                        new
                        {
                            Id = 3L,
                            AtualizadoEm = new DateTime(2025, 9, 28, 0, 0, 0, 0, DateTimeKind.Utc),
                            CapacidadeMaxima = 50,
                            CriadoEm = new DateTime(2025, 9, 28, 0, 0, 0, 0, DateTimeKind.Utc),
                            DataInicio = new DateTime(2025, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Dias = 4,
                            EstaDeletado = false,
                            Preco = 400.00m,
                            Titulo = "Cair"
                        },
                        new
                        {
                            Id = 4L,
                            AtualizadoEm = new DateTime(2025, 9, 28, 0, 0, 0, 0, DateTimeKind.Utc),
                            CapacidadeMaxima = 30,
                            CriadoEm = new DateTime(2025, 9, 28, 0, 0, 0, 0, DateTimeKind.Utc),
                            DataInicio = new DateTime(2025, 11, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Dias = 3,
                            EstaDeletado = false,
                            Preco = 600.00m,
                            Titulo = "Levantar"
                        },
                        new
                        {
                            Id = 5L,
                            AtualizadoEm = new DateTime(2025, 9, 28, 0, 0, 0, 0, DateTimeKind.Utc),
                            CapacidadeMaxima = 40,
                            CriadoEm = new DateTime(2025, 9, 28, 0, 0, 0, 0, DateTimeKind.Utc),
                            DataInicio = new DateTime(2026, 2, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Dias = 5,
                            EstaDeletado = false,
                            Preco = 800.00m,
                            Titulo = "Manger"
                        },
                        new
                        {
                            Id = 6L,
                            AtualizadoEm = new DateTime(2025, 9, 28, 0, 0, 0, 0, DateTimeKind.Utc),
                            CapacidadeMaxima = 60,
                            CriadoEm = new DateTime(2025, 9, 28, 0, 0, 0, 0, DateTimeKind.Utc),
                            DataInicio = new DateTime(2025, 12, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Dias = 6,
                            EstaDeletado = false,
                            Preco = 950.00m,
                            Titulo = "Boire"
                        },
                        new
                        {
                            Id = 7L,
                            AtualizadoEm = new DateTime(2025, 9, 28, 0, 0, 0, 0, DateTimeKind.Utc),
                            CapacidadeMaxima = 30,
                            CriadoEm = new DateTime(2025, 9, 28, 0, 0, 0, 0, DateTimeKind.Utc),
                            DataInicio = new DateTime(2025, 10, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Dias = 7,
                            EstaDeletado = false,
                            Preco = 700.00m,
                            Titulo = "Tomber"
                        },
                        new
                        {
                            Id = 8L,
                            AtualizadoEm = new DateTime(2025, 9, 28, 0, 0, 0, 0, DateTimeKind.Utc),
                            CapacidadeMaxima = 80,
                            CriadoEm = new DateTime(2025, 9, 28, 0, 0, 0, 0, DateTimeKind.Utc),
                            DataInicio = new DateTime(2026, 7, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Dias = 10,
                            EstaDeletado = false,
                            Preco = 1100.00m,
                            Titulo = "Se lever"
                        },
                        new
                        {
                            Id = 9L,
                            AtualizadoEm = new DateTime(2025, 9, 28, 0, 0, 0, 0, DateTimeKind.Utc),
                            CapacidadeMaxima = 25,
                            CriadoEm = new DateTime(2025, 9, 28, 0, 0, 0, 0, DateTimeKind.Utc),
                            DataInicio = new DateTime(2026, 4, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Dias = 8,
                            EstaDeletado = false,
                            Preco = 1500.00m,
                            Titulo = "Taberu"
                        },
                        new
                        {
                            Id = 10L,
                            AtualizadoEm = new DateTime(2025, 9, 28, 0, 0, 0, 0, DateTimeKind.Utc),
                            CapacidadeMaxima = 50,
                            CriadoEm = new DateTime(2025, 9, 28, 0, 0, 0, 0, DateTimeKind.Utc),
                            DataInicio = new DateTime(2026, 3, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Dias = 7,
                            EstaDeletado = false,
                            Preco = 1800.00m,
                            Titulo = "Nomu"
                        },
                        new
                        {
                            Id = 11L,
                            AtualizadoEm = new DateTime(2025, 9, 28, 0, 0, 0, 0, DateTimeKind.Utc),
                            CapacidadeMaxima = 40,
                            CriadoEm = new DateTime(2025, 9, 28, 0, 0, 0, 0, DateTimeKind.Utc),
                            DataInicio = new DateTime(2025, 11, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Dias = 5,
                            EstaDeletado = false,
                            Preco = 1300.00m,
                            Titulo = "Ochiru"
                        },
                        new
                        {
                            Id = 12L,
                            AtualizadoEm = new DateTime(2025, 9, 28, 0, 0, 0, 0, DateTimeKind.Utc),
                            CapacidadeMaxima = 100,
                            CriadoEm = new DateTime(2025, 9, 28, 0, 0, 0, 0, DateTimeKind.Utc),
                            DataInicio = new DateTime(2025, 12, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Dias = 6,
                            EstaDeletado = false,
                            Preco = 2000.00m,
                            Titulo = "Tatsu"
                        },
                        new
                        {
                            Id = 13L,
                            AtualizadoEm = new DateTime(2025, 9, 28, 0, 0, 0, 0, DateTimeKind.Utc),
                            CapacidadeMaxima = 70,
                            CriadoEm = new DateTime(2025, 9, 28, 0, 0, 0, 0, DateTimeKind.Utc),
                            DataInicio = new DateTime(2025, 10, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Dias = 5,
                            EstaDeletado = false,
                            Preco = 1200.00m,
                            Titulo = "Chī"
                        },
                        new
                        {
                            Id = 14L,
                            AtualizadoEm = new DateTime(2025, 9, 28, 0, 0, 0, 0, DateTimeKind.Utc),
                            CapacidadeMaxima = 40,
                            CriadoEm = new DateTime(2025, 9, 28, 0, 0, 0, 0, DateTimeKind.Utc),
                            DataInicio = new DateTime(2026, 1, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Dias = 6,
                            EstaDeletado = false,
                            Preco = 1000.00m,
                            Titulo = "Hē"
                        },
                        new
                        {
                            Id = 15L,
                            AtualizadoEm = new DateTime(2025, 9, 28, 0, 0, 0, 0, DateTimeKind.Utc),
                            CapacidadeMaxima = 50,
                            CriadoEm = new DateTime(2025, 9, 28, 0, 0, 0, 0, DateTimeKind.Utc),
                            DataInicio = new DateTime(2026, 7, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Dias = 7,
                            EstaDeletado = false,
                            Preco = 1400.00m,
                            Titulo = "Shuāidǎo"
                        },
                        new
                        {
                            Id = 16L,
                            AtualizadoEm = new DateTime(2025, 9, 28, 0, 0, 0, 0, DateTimeKind.Utc),
                            CapacidadeMaxima = 20,
                            CriadoEm = new DateTime(2025, 9, 28, 0, 0, 0, 0, DateTimeKind.Utc),
                            DataInicio = new DateTime(2025, 11, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Dias = 4,
                            EstaDeletado = false,
                            Preco = 2500.00m,
                            Titulo = "Qǐlái"
                        });
                });

            modelBuilder.Entity("AT_Csharp_2T_2S.Models.PaisDestino", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("AtualizadoEm")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CriadoEm")
                        .HasColumnType("TEXT");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("PaisesDestino");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            AtualizadoEm = new DateTime(2025, 9, 28, 0, 0, 0, 0, DateTimeKind.Utc),
                            CriadoEm = new DateTime(2025, 9, 28, 0, 0, 0, 0, DateTimeKind.Utc),
                            Nome = "Brasil"
                        },
                        new
                        {
                            Id = 2L,
                            AtualizadoEm = new DateTime(2025, 9, 28, 0, 0, 0, 0, DateTimeKind.Utc),
                            CriadoEm = new DateTime(2025, 9, 28, 0, 0, 0, 0, DateTimeKind.Utc),
                            Nome = "França"
                        },
                        new
                        {
                            Id = 3L,
                            AtualizadoEm = new DateTime(2025, 9, 28, 0, 0, 0, 0, DateTimeKind.Utc),
                            CriadoEm = new DateTime(2025, 9, 28, 0, 0, 0, 0, DateTimeKind.Utc),
                            Nome = "Japão"
                        },
                        new
                        {
                            Id = 4L,
                            AtualizadoEm = new DateTime(2025, 9, 28, 0, 0, 0, 0, DateTimeKind.Utc),
                            CriadoEm = new DateTime(2025, 9, 28, 0, 0, 0, 0, DateTimeKind.Utc),
                            Nome = "China"
                        });
                });

            modelBuilder.Entity("AT_Csharp_2T_2S.Models.Reserva", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("AtualizadoEm")
                        .HasColumnType("TEXT");

                    b.Property<long>("ClienteId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CriadoEm")
                        .HasColumnType("TEXT");

                    b.Property<long>("PacoteTuristicoId")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("PrecoTotal")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.HasIndex("PacoteTuristicoId");

                    b.ToTable("Reservas");
                });

            modelBuilder.Entity("CidadeDestinoPacoteTuristico", b =>
                {
                    b.Property<long>("DestinosId")
                        .HasColumnType("INTEGER");

                    b.Property<long>("PacotesTuristicosId")
                        .HasColumnType("INTEGER");

                    b.HasKey("DestinosId", "PacotesTuristicosId");

                    b.HasIndex("PacotesTuristicosId");

                    b.ToTable("CidadeDestinoPacoteTuristico");

                    b.HasData(
                        new
                        {
                            DestinosId = 1L,
                            PacotesTuristicosId = 1L
                        },
                        new
                        {
                            DestinosId = 1L,
                            PacotesTuristicosId = 2L
                        },
                        new
                        {
                            DestinosId = 1L,
                            PacotesTuristicosId = 3L
                        },
                        new
                        {
                            DestinosId = 1L,
                            PacotesTuristicosId = 4L
                        },
                        new
                        {
                            DestinosId = 2L,
                            PacotesTuristicosId = 5L
                        },
                        new
                        {
                            DestinosId = 2L,
                            PacotesTuristicosId = 6L
                        },
                        new
                        {
                            DestinosId = 2L,
                            PacotesTuristicosId = 7L
                        },
                        new
                        {
                            DestinosId = 2L,
                            PacotesTuristicosId = 8L
                        },
                        new
                        {
                            DestinosId = 3L,
                            PacotesTuristicosId = 9L
                        },
                        new
                        {
                            DestinosId = 3L,
                            PacotesTuristicosId = 10L
                        },
                        new
                        {
                            DestinosId = 3L,
                            PacotesTuristicosId = 11L
                        },
                        new
                        {
                            DestinosId = 3L,
                            PacotesTuristicosId = 12L
                        },
                        new
                        {
                            DestinosId = 4L,
                            PacotesTuristicosId = 13L
                        },
                        new
                        {
                            DestinosId = 4L,
                            PacotesTuristicosId = 14L
                        },
                        new
                        {
                            DestinosId = 4L,
                            PacotesTuristicosId = 15L
                        },
                        new
                        {
                            DestinosId = 4L,
                            PacotesTuristicosId = 16L
                        });
                });

            modelBuilder.Entity("AT_Csharp_2T_2S.Models.CidadeDestino", b =>
                {
                    b.HasOne("AT_Csharp_2T_2S.Models.PaisDestino", "PaisDestino")
                        .WithMany("CidadesDestino")
                        .HasForeignKey("PaisDestinoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PaisDestino");
                });

            modelBuilder.Entity("AT_Csharp_2T_2S.Models.Reserva", b =>
                {
                    b.HasOne("AT_Csharp_2T_2S.Models.Cliente", "Cliente")
                        .WithMany("Reservas")
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AT_Csharp_2T_2S.Models.PacoteTuristico", "PacoteTuristico")
                        .WithMany("Reservas")
                        .HasForeignKey("PacoteTuristicoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");

                    b.Navigation("PacoteTuristico");
                });

            modelBuilder.Entity("CidadeDestinoPacoteTuristico", b =>
                {
                    b.HasOne("AT_Csharp_2T_2S.Models.CidadeDestino", null)
                        .WithMany()
                        .HasForeignKey("DestinosId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AT_Csharp_2T_2S.Models.PacoteTuristico", null)
                        .WithMany()
                        .HasForeignKey("PacotesTuristicosId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AT_Csharp_2T_2S.Models.Cliente", b =>
                {
                    b.Navigation("Reservas");
                });

            modelBuilder.Entity("AT_Csharp_2T_2S.Models.PacoteTuristico", b =>
                {
                    b.Navigation("Reservas");
                });

            modelBuilder.Entity("AT_Csharp_2T_2S.Models.PaisDestino", b =>
                {
                    b.Navigation("CidadesDestino");
                });
#pragma warning restore 612, 618
        }
    }
}
